/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package trees;

import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class Library <T> {
    public static void main(String[] args) {

//
//        BinarySearchTree treeio = new BinarySearchTree();
//        treeio.add(50);
//        treeio.add(1);
//        treeio.add(2);
//        treeio.add(3);
//        treeio.add(12);
//        treeio.add(33);
//        treeio.add(10);
//        treeio.add(66);
//        treeio.add(70);
//        treeio.add(5);
//        treeio.add(11);
//        treeio.add(36);
//        treeio.add(88);
//
//        System.out.println(treeio.postOrder(treeio.root));
//
//        System.out.println(breadthFirst(treeio));
//
//
//      BinaryTree newTree =  FizzBuzzTree.fizzBuzzTree(treeio);
//
//        System.out.println(newTree.inOrder(newTree.root));

    }


    public static Queue<Integer> breadthFirst(BinaryTree tree) {
        Queue<Node> queue = new LinkedList<>();
        Queue<Integer> list = new LinkedList<>();
        if (tree.root == null)
            return null;
        queue.clear();
        queue.add(tree.root);
        list.add((int) tree.root.value);
        while (!queue.isEmpty()) {
            Node node = queue.remove();

            if (node.left != null) {
                queue.add(node.left);
                list.add((int) node.left.value);
            }
            if (node.right != null) {
                queue.add(node.right);
                list.add((int) node.right.value);
            }
        }
        return list;

    }




    }
